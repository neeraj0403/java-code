<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="L_11.SOE_primes"/>
<fullyQualifiedTypeName name="L16.generic_tree.heapmover"/>
<fullyQualifiedTypeName name="Assignment_hackerblocks.stack_isbalanced"/>
<fullyQualifiedTypeName name="Adapters.stackusingpop"/>
<fullyQualifiedTypeName name="Assignment_hackerblocks.stack_isbalanced.StacksUsingArrays"/>
<fullyQualifiedTypeName name="Assignment_hackerblocks.prateek_sir_and_coding"/>
<fullyQualifiedTypeName name="Assignment_hackerblocks.Importance_of_time"/>
<fullyQualifiedTypeName name="Assignment_hackerblocks.hoodies"/>
<fullyQualifiedTypeName name="Assignment_hackerblocks.k_reverse.Node"/>
<fullyQualifiedTypeName name="Assignment_hackerblocks.k_reverse"/>
<fullyQualifiedTypeName name="Assignment_hackerblocks.Merge_sorted_linkedlist"/>
<fullyQualifiedTypeName name="practice_oops.inheritance.kth_from_last_LL"/>
<fullyQualifiedTypeName name="Assignment_hackerblocks.k_append_linkedlist"/>
<fullyQualifiedTypeName name="lec_18.binary_tree.BSTPair"/>
<fullyQualifiedTypeName name="lec_18.binary_tree.balpair"/>
<fullyQualifiedTypeName name="java.util.Stack"/>
<fullyQualifiedTypeName name="java.lang.System"/>
<fullyQualifiedTypeName name="Assignment_hackerblocks.pallindromic_LinkedList"/>
<fullyQualifiedTypeName name="Assignment_hackerblocks.pallindromic_Linkedlist"/>
<fullyQualifiedTypeName name="javax.xml.soap.Node"/>
<fullyQualifiedTypeName name="Assignment_hackerblocks.fold_linked_list"/>
<fullyQualifiedTypeName name="Assignment_hackerblocks.triplet_linked_list"/>
<fullyQualifiedTypeName name="Assignment_hackerblocks.linkedlist_sum"/>
<fullyQualifiedTypeName name="lec_18.binary_tree.diapair"/>
<fullyQualifiedTypeName name="lec_18.binary_tree.Dpair"/>
<fullyQualifiedTypeName name="java.awt.DisplayMode"/>
<fullyQualifiedTypeName name="practice_oops.BST.node"/>
<fullyQualifiedTypeName name="lec_18.binary_tree.distance"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="practice_oops.inheritance.binary_trees"/>
<fullyQualifiedTypeName name="lec_19.bst.node"/>
<fullyQualifiedTypeName name="java.lang.Comparable"/>
<fullyQualifiedTypeName name="crux29dec2018.fibonacci"/>
<fullyQualifiedTypeName name="org.omg.CORBA.Current"/>
<fullyQualifiedTypeName name="java.lang.Character"/>
<fullyQualifiedTypeName name="lec_22.Trei"/>
<fullyQualifiedTypeName name="lec_18.binary_tree.node"/>
<fullyQualifiedTypeName name="Assignment_hackerblocks.LinkedList"/>
<fullyQualifiedTypeName name="java.util.Queue"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="lec_18.binary_tree.ppair"/>
<fullyQualifiedTypeName name="java.lang.Override"/>
<fullyQualifiedTypeName name="java.util.Comparator"/>
<fullyQualifiedTypeName name="java.util.LinkedList"/>
<fullyQualifiedTypeName name="lec_24.Graph.vertex"/>
<fullyQualifiedTypeName name="lec_24.Graph"/>
<fullyQualifiedTypeName name="lec_21.heap"/>
<fullyQualifiedTypeName name="lec_22.generic_heap_client"/>
<fullyQualifiedTypeName name="lec_24.Graph.primspair"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="lec_22.generic_heap"/>
<fullyQualifiedTypeName name="lec_22.generic_heap_client.pair"/>
<fullyQualifiedTypeName name="lec_20.linkedlistgeneric2"/>
<fullyQualifiedTypeName name="java.lang.String"/>
<fullyQualifiedTypeName name="lec_22.generic_heap.pair"/>
<fullyQualifiedTypeName name="java.lang.Math"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="java.util.Collection"/>
<fullyQualifiedTypeName name="java.util.Collections"/>
<fullyQualifiedTypeName name="java.util.Scanner"/>
</qualifiedTypeNameHistroy>
